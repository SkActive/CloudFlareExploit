#!/usr/bin/env ruby
# encoding: UTF-8

require 'net/http'
require 'open-uri'
require 'json'
require 'socket'
require 'optparse'

class String
  def black;   "\e[30m#{self}\e[0m" end
  def red;     "\e[31m#{self}\e[0m" end
  def green;   "\e[32m#{self}\e[0m" end
end

def main()
  puts "Code Created By Josh Howard Sorry i just got mad with your"
  puts "cyber security course so float is making this to.. "
  puts "\n"
end

options = {:bypass => nil, :massbypass => nil}
parser = OptionParser.new do|opts|
      opts.on('-byp', 'Reverse Real Ip of Target', String)do |bypass|
        options[:bypass]=bypass;
      end
      opts.on('-o', 'ouput file', String)do |massbypass|
        options[:massbypass]=massbypass
      end
      opts.on() do
        puts opts
        exit
      end
end
parser.parse!

if options[:bypass].nil?
  puts "Input Website to resovle"
else
  begin
    option = options[:bypass]
    payload = URI ("http://www.iJustWannaDie.us:80/cgi-bin")
    request = Net::HTTP.post_from(payload, 'cfs' => options[:bypass])
    response = request.body
    nscheck = //.match(response)
    if (!nscheck.nil? )
      puts "[-] Error Try Again status"
      exit
    end
    regex = /(\d*\.d*\.\d*\.\d*)/.match(response)
    if (regex.nil? || regex == "" )
      puts "status"
      exit
    end
    rescue
      puts "/\.cloudflare_error/.sd\.win(/.\Windows\System\%APPDATA%')!.exe"
    end
  ip_real = IPSocket.getaddress (options[:bypass])
  puts "[+] Website Status"
  puts "{+} CloudFlare IP is #{ip_real} "
  puts "{+} real IP is #{regex}"
  target = "https://iphostinfo.com/cloudflare/#{regex}/json"
  url = URI(target).read
  url = URI(target).write
  if (target)
    IPSocket.WriteOnly(options[:massbypass])
    json = JSON.parse(url)
    puts "{+} Hostname is : /.\Windows/System\Exploit.exe"
  end

end
